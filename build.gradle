plugins {
	id 'org.springframework.boot' version '3.5.6'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'java-library'
	id "io.freefair.lombok" version "8.14.2"
	id 'jacoco'
	id "org.flywaydb.flyway" version "11.13.2"
//	id 'org.owasp.dependencycheck' version '9.1.0'
	id "org.sonarqube" version "6.3.1.5724"
//	id 'info.solidsoft.pitest' version '1.15.0'
}

group = 'de.thg'
version = '0.0.6-SNAPSHOT'

dependencies {

	api libs.spring.boot.starter.web
	api libs.spring.boot.starter.data.mongodb
	implementation libs.spring.boot.starter.actuator
	implementation libs.springdoc.openapi.starter.webmvc.ui
	runtimeOnly libs.hibernate.validator
	implementation 'io.micrometer:micrometer-registry-prometheus'

	implementation libs.metadata.extractor
	implementation libs.commons.imaging
	implementation libs.tika.core
	api libs.dependency.check.gradle

	testImplementation(libs.spring.boot.starter.test) {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation libs.assertj.core
	testImplementation libs.testcontainers
	testImplementation libs.testcontainers.junit.jupiter
	testImplementation libs.testcontainers.mongodb
	testImplementation libs.rest.assured
}

java {
	toolchain.languageVersion.set(JavaLanguageVersion.of(17))
}

testing {
	suites {

		test {
			useJUnitJupiter()
		}

		integrationTest(JvmTestSuite) {
			dependencies {
				implementation project()
				implementation 'org.springframework.boot:spring-boot-starter-test'
				implementation 'org.testcontainers:testcontainers'
				implementation 'org.testcontainers:junit-jupiter'
				implementation 'org.testcontainers:mongodb'
				implementation 'io.rest-assured:rest-assured:5.5.6'
			}

			targets {
				all {
					testTask.configure {
						shouldRunAfter(test)
					}
				}
			}
		}
	}
}

tasks.named('check') {
	dependsOn(testing.suites.integrationTest)
}

jacocoTestReport {
	reports {
		xml.required
	}
	dependsOn test
}

//pitest {
//	junit5PluginVersion = '1.1.2'
//}

//check.dependsOn dependencyCheckAnalyze

flyway {
	url = 'jdbc:postgresql://localhost:5432/tom'
	user = 'tom'
	password = 'tom'
}