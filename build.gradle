plugins {
	id 'org.springframework.boot' version '3.2.1' apply false
	id 'io.spring.dependency-management' version '1.1.4'
	id 'java-library'
	id "org.flywaydb.flyway" version "10.4.1"
	id 'org.owasp.dependencycheck' version '9.0.7'
	id "io.freefair.lombok" version "8.4"
	id 'jacoco'
	id "org.sonarqube" version "4.4.1.3373"
	id 'info.solidsoft.pitest' version '1.15.0'
}

group = 'de.thg'
version = '0.0.4-SNAPSHOT'

dependencyManagement {
	imports {
		mavenBom(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES)
		mavenBom 'org.testcontainers:testcontainers-bom:1.19.3'
	}
}

dependencies {

	api 'org.springframework.boot:spring-boot-starter-web'
	api 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0"
	runtimeOnly 'org.hibernate.validator:hibernate-validator:8.0.1.Final'

	implementation 'com.drewnoakes:metadata-extractor:2.19.0'
	implementation 'org.apache.commons:commons-imaging:1.0-alpha3'
	implementation 'org.apache.tika:tika-core:2.9.1'
	api 'org.owasp:dependency-check-gradle:9.0.6'
	runtimeOnly 'org.mongodb:mongodb-driver-sync:4.11.1'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.assertj:assertj-core:3.24.2'
	testImplementation "org.testcontainers:testcontainers"
	testImplementation "org.testcontainers:junit-jupiter"
	testImplementation 'org.testcontainers:mongodb'
	testImplementation 'io.rest-assured:rest-assured:5.4.0'
}

java {
	toolchain.languageVersion.set(JavaLanguageVersion.of(17))
	toolchain.vendor.set(JvmVendorSpec.ORACLE)
}

testing {
	suites {

		test {
			useJUnitJupiter()
		}

		integrationTest(JvmTestSuite) {
			dependencies {
				implementation project()
				implementation 'org.springframework.boot:spring-boot-starter-test'
				implementation 'org.testcontainers:testcontainers'
				implementation 'org.testcontainers:junit-jupiter'
				implementation 'org.testcontainers:mongodb'
				implementation 'io.rest-assured:rest-assured:5.4.0'
			}

			targets {
				all {
					testTask.configure {
						shouldRunAfter(test)
					}
				}
			}
		}
	}
}

//test {
//	useJUnitPlatform()
//	exclude '**/*IT.class'
////	project.buildDir
//	reports.html.outputLocation = file("$reports.html.outputLocation/unit")
//	reports.junitXml.outputLocation = file("$reports.junitXml.outputLocation/unit")
//}
//
//task integrationTest(type: Test) {
//	useJUnitPlatform()
//	include '**/*IT.class'
//	exclude '**/DockerComposeContainerIT.class'
////	reports.html.outputLocation = file("$reports.html.destination/integration")
////	reports.junitXml.outputLocation = file("$reports.junitXml.destination/integration")
//}

//check.dependsOn(integrationTest)

jacocoTestReport {
	reports {
		xml.required
	}
	dependsOn test
}

pitest {
	junit5PluginVersion = '1.1.2'
}

//check.dependsOn dependencyCheckAnalyze

flyway {
	url = 'jdbc:postgresql://localhost:5432/tom'
	user = 'tom'
	password = 'tom'
}